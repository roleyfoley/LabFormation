{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A template to spin up a basic VPC for Lab Usage. Creates an internet connected VPC with a Single Subnet and Basic Management SecGroup",
    "Parameters": {
        "ClientIP": {
            "Description": "The IP address range that can be used to get to the proxy EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Resources": {
        "BasicMgmtSecGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupName" : "BasicMgmt" ,
                "GroupDescription" : "Basic Management Acccess for All Instances",
                "Tags" :  [ {"Key" : "Name", "Value" : "BasicMgmt"} ],
                "VpcId" : {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress" : [{
                    "IpProtocol" : "-1",
                    "FromPort" : "-1",
                    "ToPort" : "-1",
                    "CidrIp" : { "Ref": "ClientIP"}
                }]
            }
        },
        "LocalAccessSecGroupIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties":{
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": {
                "Fn::GetAtt": [
                    "BasicMgmtSecGroup",
                    "GroupId"
                ]
                },
                "GroupId": {
                "Fn::GetAtt": [
                    "BasicMgmtSecGroup",
                    "GroupId"
                ]
                }
            }
        },
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.100.0.0/16",
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} }, {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }, { "Key": "Function", "Value" : "Lab"} ]
            }
        },
        "Subnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "CidrBlock" : "10.100.0.0/24",
                "MapPublicIpOnLaunch": true,
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} }, {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ]
            }
        },
        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} }, {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ]
            }
        },
        "AttachGateway" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "RouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {"Ref" : "VPC"},
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} }, {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ]
            }
        },
        "Route" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "AttachGateway",
            "Properties" : {
                "RouteTableId" : { "Ref" : "RouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "SubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet" },
                "RouteTableId" : { "Ref" : "RouteTable" }
            }
        }
    },
    "Outputs": {
        "VPCId": {
            "Description": "VPC Id",
            "Value": {
                "Ref": "VPC"
            }
        }
    }
}